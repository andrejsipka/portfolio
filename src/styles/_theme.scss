@use "sass:map";
@use './constants' as constants;
@use './mixins' as mixins;

@mixin typography-theme($theme) {
   $is-dark-theme: map.get($theme, is-dark);

   :is(h1, h2, h3, h4), :is(h1, h2, h3, h4) :is(span) {
      color: if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
   }

   :is(p, span) {
      color: if($is-dark-theme, constants.$color-light-brown, constants.$color-dark-brown);
   }

   .heading, .caption, .heading > a {
      color: if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
   }

   .text {
      color: if($is-dark-theme, constants.$color-light-brown, constants.$color-dark-brown);
   }
}

@mixin layout-theme($theme) {
   $is-dark-theme: map.get($theme, is-dark);

   body {
      background-color: if($is-dark-theme, constants.$color-black, constants.$color-snow-white);
   }

   .site-header__item a, .site-header__logo a {
      color: if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
   }

   .dashed-divider {
      stroke: if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
   }
}

@mixin controls-theme($theme) {
   $is-dark-theme: map.get($theme, is-dark);

   :is(a, button).button {
      &.variant--link {
         &.link--secondary {
            color: if($is-dark-theme, constants.$color-light-brown, constants.$color-dark-brown);
         }

         &:hover {
            color: if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
         }
      }

      &.variant--button {
         &.button--secondary {
            color: if($is-dark-theme, constants.$color-light-brown, constants.$color-dark-brown);
            border-color: if($is-dark-theme, constants.$color-light-brown, constants.$color-dark-brown);;
         }

         &:hover {
            color: if($is-dark-theme, constants.$color-black, constants.$color-snow-white);
            background-color:  if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
            border-color:  if($is-dark-theme, constants.$color-snow-white, constants.$color-black);
         }
      }
   }
}


@mixin setTheme($theme) {
   @include typography-theme($theme);
   @include layout-theme($theme);
   @include controls-theme($theme);
}
